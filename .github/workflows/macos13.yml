on:
  push
jobs:
  macos13:
    runs-on: macos-13

    steps:
      - uses: actions/checkout@v4

      - name: git config credential.helper
        run: git config credential.helper
        
      - name: List available Xcode versions
        run: ls /Applications | grep Xcode
        
      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode_14.1.0.app

      - name: Brew install base dependencies
        run: |
          # A workaround for "The `brew link` step did not complete successfully" error.
          brew install --quiet python@3 || brew link --overwrite python@3
          brew install qt@5
          brew install --quiet automake berkeley-db@4 miniupnpc gperf qrencode librsvg && curl -L https://raw.githubusercontent.com/vergecurrency/protobuf261/master/protobuf261.rb > protobuf261.rb && brew install protobuf261.rb
      
      - name: handle line endings
        run: git config --global core.autocrlf input
      
      
      - name: git clone boost from official github
        run: git clone --single-branch --branch boost-1.65.1 https://github.com/boostorg/boost.git
        
      - name: git submodule update --init --recursive --remote --no-fetch --depth=1
        run: cd boost && git submodule update --init --recursive --remote --no-fetch --depth=1
        
      - name: make boost
        run: cd boost && ./bootstrap.sh
      
      - name: b2
        run: cd boost && ./b2 --prefix=./boost_install_dir install
        
      - name: Print Bootstrap Log if Failed
        if: failure()
        run: |
          cat boost/bootstrap.log
      
      - name: Brew link dependencies
        run: brew link qt@5 berkeley-db@4
        
      - name: which clang/xcode
        run: clang --version

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: ./configure --disable-tests --disable-dependency-tracking --disable-werror --with-gui --bindir=`pwd`/release/bin --libdir=`pwd`/release/lib

      - name: make
        run: make -j4

      - name: make .dmg
        run: make deploy

      - uses: actions/upload-artifact@v4
        with:
          name: tpay-macos13
          path: |
            *.dmg