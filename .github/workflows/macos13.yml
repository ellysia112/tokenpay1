on:
  push
jobs:
  macos13:
    runs-on: macos-13
    if: always()

    steps:
      - uses: actions/checkout@v4

      - name: git config credential.helper
        run: git config credential.helper
        
      - name: List available Xcode versions
        run: ls /Applications | grep Xcode
        
      - name: Select Xcode version
        run: sudo xcode-select -s /Applications/Xcode_14.1.0.app
      
      - name: Brew install base dependencies
        run: |
          # A workaround for "The `brew link` step did not complete successfully" error.
          brew install --quiet python@3 || brew link --overwrite python@3
          brew install qt@5
          brew install --quiet automake berkeley-db@4 miniupnpc gperf qrencode librsvg && curl -L https://raw.githubusercontent.com/vergecurrency/protobuf261/master/protobuf261.rb > protobuf261.rb && brew install protobuf261.rb

      - name: clone qt5webkit
        run: |
          git clone https://code.qt.io/qt/qtwebkit.git
          brew install conan@1
          cd qtwebkit && git checkout 5.212 && sed -i '' 's|libjpeg-turbo/2.0.5@qtproject/stable|libjpeg-turbo/2.0.5|g' Tools/qt/conanfile.py
          Tools/qt/build-qtwebkit-conan.py --qt=/usr/local/opt/qt@5/ --install

      - name: Setup tmate session
        if: always()
        uses: mxschmitt/action-tmate@v3
      
      - name: handle line endings
        run: git config --global core.autocrlf input
      
      - name: Download and extract Berkeley DB 4.8
        run: |
          wget https://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz
          tar -xzvf db-4.8.30.NC.tar.gz
          
      - name: Configure Berkeley DB 4.8
        run: cd db-4.8.30.NC/build_unix && ../dist/configure --enable-cxx
        
        
      - name: Fix atomic Berkeley DB compile bug
        run: |
          sed -i '' 's/__atomic_compare_exchange/__atomic_compare_exchange_db/g' db-4.8.30.NC/dbinc/atomic.h
      - name: Build and install Berkeley DB 4.8
        run: cd db-4.8.30.NC/build_unix && make && sudo make install

      - name: Download Boost file
        run: wget https://archives.boost.io/release/1.65.1/source/boost_1_65_1.tar.bz2
      
      - name: Extract Boost file
        run: tar -xjvf boost_1_65_1.tar.bz2

      


      
      - name: Patch boost to use gcc-12
        run: |
          cd boost_1_65_1 && cp ../boost.patch . && patch -p0 < boost.patch
          
      - name: bootstrap
        run: cd boost_1_65_1 && git branch && ./bootstrap.sh --prefix=/usr/local --with-libraries=chrono,date_time,iostreams,filesystem,program_options,system,thread,test
      
      - name: b2
        run: cd boost_1_65_1 && sudo ./b2 install toolset=gcc-12

      
      
      - name: Brew link dependencies
        if: always()
        run: brew link qt@5 berkeley-db@4
      
        
      - name: which clang/xcode
        run: clang --version

      - name: Auto generate
        run: ./autogen.sh

      - name: configure
        run: BDB_CFLAGS="-I/usr/local/opt/berkeley-db@4/include" BDB_LIBS="-L/usr/local/opt/berkeley-db@4/lib -ldb_cxx-4.8" OPENSSL_CFLAGS="-I/usr/local/opt/openssl@1.1/include" OPENSSL_LIBS="-L/usr/local/opt/openssl@1.1/lib -lssl -lcrypto" ./configure --disable-tests --disable-dependency-tracking --disable-werror --enable-gui --with-qt5=/usr/local/opt/qt@5 --bindir=`pwd`/release/bin --libdir=`pwd`/release/lib

      - name: make
        run: make -j4
      
      - name: Setup tmate session
        if: always()
        uses: mxschmitt/action-tmate@v3

      - name: make .dmg
        run: make deploy

      - uses: actions/upload-artifact@v4
        with:
          name: tpay-macos13
          path: |
            *.dmg
# on:
#   push
# jobs:
  # macos13:
  #   runs-on: macos-13

  #   steps:
  #     - uses: actions/checkout@v4

  #     - name: git config credential.helper
  #       run: git config credential.helper
        
  #     - name: List available Xcode versions
  #       run: ls /Applications | grep Xcode
        
  #     - name: Select Xcode version
  #       run: sudo xcode-select -s /Applications/Xcode_14.1.0.app

  #     - name: Brew install base dependencies
  #       run: |
  #         # A workaround for "The `brew link` step did not complete successfully" error.
  #         brew install --quiet python@3 || brew link --overwrite python@3
  #         brew install qt@5
  #         brew install --quiet automake berkeley-db@4 miniupnpc gperf qrencode librsvg && curl -L https://raw.githubusercontent.com/vergecurrency/protobuf261/master/protobuf261.rb > protobuf261.rb && brew install protobuf261.rb
      
  #     - name: handle line endings
  #       run: git config --global core.autocrlf input

  #     - name: Download Boost file
  #       run: wget https://archives.boost.io/release/1.65.1/source/boost_1_65_1.tar.bz2
      
  #     - name: Extract Boost file
  #       run: tar -xjvf boost_1_65_1.tar.bz2
      
  #     - name: Setup tmate session
  #       if: always()
  #       uses: mxschmitt/action-tmate@v3
        
  #     - name: Print Bootstrap Log if Failed
  #       if: failure()
  #       run: |
  #         cat build/bootstrap.log
      
  #     - name: Brew link dependencies
  #       run: brew link qt@5 berkeley-db@4
        
  #     - name: which clang/xcode
  #       run: clang --version

  #     - name: Auto generate
  #       run: ./autogen.sh

  #     - name: configure
  #       run: ./configure --disable-tests --disable-dependency-tracking --disable-werror --with-gui --bindir=`pwd`/release/bin --libdir=`pwd`/release/lib

  #     - name: make
  #       run: make -j4

  #     - name: make .dmg
  #       run: make deploy

  #     - uses: actions/upload-artifact@v4
  #       with:
  #         name: tpay-macos13
  #         path: |
  #           *.dmg