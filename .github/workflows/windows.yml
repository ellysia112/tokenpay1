on: 
  push:
    branches:
      - main  # or your target branch

jobs:
  windows32-ubuntu20:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4

      - name: Restore depends cache
        id: cache-depends
        uses: actions/cache/restore@v3
        with:
          path: |
            depends/built
            depends/sources
            depends/work
            depends/i686-w64-mingw32
          key: win32-depends-${{ runner.os }}-${{ hashFiles('depends/packages/*') }}
          restore-keys: |
            win32-depends-${{ runner.os }}-${{ hashFiles('depends/packages/*') }}-
            win32-depends-${{ runner.os }}-

      - name: Install base tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libtool automake pkg-config bsdmainutils curl git

      - name: Set up MingW32 Cross Compile tools
        run: |
          sudo apt-get install -y g++-mingw-w64-i686 mingw-w64-i686-dev
          sudo update-alternatives --set i686-w64-mingw32-g++ /usr/bin/i686-w64-mingw32-g++-posix
          
      - name: create native bin location
        if: steps.cache-depends.outputs.cache-hit != 'true'
        run: cd depends && mkdir i686-w64-mingw32 && cd i686-w64-mingw32 && mkdir native && cd native && mkdir bin

      - name: Install essential tools
        run: |
          sudo apt-get install -y \
          build-essential \
          xutils-dev \
          libicu-dev \
          dos2unix \
          ninja-build \
          libtool \
          gperf \
          autotools-dev \
          automake \
          pkg-config \
          bsdmainutils \
          libattr1-dev \
          make \
          bison \
          byacc \
          cmake \
          curl \
          ruby \
          flex \
          g++-multilib \
          libevent-dev \
          binutils-gold \
          python2 \
          coreutils \
          libleveldb-dev \
          libsqlite3-dev \
          libwebp-dev \
          libxml2-dev \
          libxslt1-dev \
          xserver-xorg-dev \
          xorg-dev \
          libpulse-dev \
          libfontconfig1-dev \
          libfreetype6-dev \
          libx11-dev \
          libx11-xcb-dev \
          libxext-dev \
          libxfixes-dev \
          libxi-dev \
          libxrender-dev \
          libxcb1-dev \
          libxcb-glx0-dev \
          libxcb-keysyms1-dev \
          libxcb-image0-dev \
          libxcb-shm0-dev \
          libxcb-icccm4-dev \
          libxcb-sync-dev \
          libxcb-xfixes0-dev \
          libxcb-shape0-dev \
          libxcb-randr0-dev \
          libxcb-render-util0-dev \
          libxcb-xinerama0-dev \
          libxkbcommon-dev \
          libxkbcommon-x11-dev \
          xserver-xorg-dev \
          xorg-dev \
          libxrender-dev \
          libxrandr-dev \
          libxt-dev \
          libxcb-xinerama0 \
          libxcb-xinerama0-dev

      - name: Set Python 2 as default
        run: |
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 2
          sudo update-alternatives --set python /usr/bin/python2
          echo "$(dirname $(readlink -f $(which python)))" >> $GITHUB_PATH

      - name: Verify Python Version
        run: python --version

      - name: Install and update autoconf to 2.71
        run: |
          wget https://ftp.gnu.org/gnu/autoconf/autoconf-2.71.tar.gz
          tar -xzf autoconf-2.71.tar.gz
          cd autoconf-2.71
          # Install to a local directory to avoid system conflicts
          ./configure --prefix=$HOME/.local
          make
          make install
          # Add the local bin to PATH
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          # Verify the version
          $HOME/.local/bin/autoconf --version



      - name: Fix sqlite3
        run: echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:\$PKG_CONFIG_PATH" >> $GITHUB_ENV
        
      - name: Add gperf native bin path to environment
        run: echo "$GITHUB_WORKSPACE/depends/i686-w64-mingw32/native/bin" >> $GITHUB_PATH

      - name: remove any previous versions of openssl
        run: sudo apt purge -y libssl-dev && sudo apt clean && sudo apt autoremove

      - name: Build dependencies in the depends folder
        if: steps.cache-depends.outputs.cache-hit != 'true'
        run: |
          echo "PATH=$(echo "$PATH" | sed -e 's/:\/mnt.*//g')" >> $GITHUB_ENV
          cd depends/
          make HOST=i686-w64-mingw32

      - name: Save depends cache
        if: steps.cache-depends.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: |
            depends/built
            depends/sources
            depends/work
            depends/i686-w64-mingw32
          key: win32-depends-${{ runner.os }}-${{ hashFiles('depends/packages/*') }}
          
      - name: get and untar bdb4.8
        run: wget http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz && tar -xzvf db-4.8.30.NC.tar.gz
        
      - name: list files
        run: ls
        
      - name: fix atomic
        run: cd db-4.8.30.NC/build_unix/ && sed -i 's/__atomic_compare_exchange/__atomic_compare_exchange_db/g' ../dbinc/atomic.h
        
      - name: build bdb4.8
        run: cd db-4.8.30.NC/build_unix/ && ../dist/configure --enable-cxx --disable-shared --with-pic  --prefix=$BDB_PREFIX
        
      - name: make and make install 
        run: cd db-4.8.30.NC/build_unix/ && sudo make install
          
      - name: list usr/bin
        run: cd /usr/bin && ls
        
      - name: list usr/local/bin
        run: cd /usr/local/bin && ls
        
      - name: list usr/local
        run: cd /usr/local/ && ls
      
      - name: list made depends
        run: cd $GITHUB_WORKSPACE/depends/i686-w64-mingw32/ && ls -al
        
      - name: list made depends share
        run: cd $GITHUB_WORKSPACE/depends/i686-w64-mingw32/share && ls -al
        
      - name: list made depends include
        run: cd $GITHUB_WORKSPACE/depends/i686-w64-mingw32/include && ls -al
        
      - name: list made depends include boost
        run: cd $GITHUB_WORKSPACE/depends/i686-w64-mingw32/include/boost && ls -al
        
      - name: list made depends include openssl
        run: cd $GITHUB_WORKSPACE/depends/i686-w64-mingw32/include/openssl && ls -al
        
      - name: list made depends include QtCore
        run: cd $GITHUB_WORKSPACE/depends/i686-w64-mingw32/include/QtCore && ls -al
        
      - name: list made depends include QtWebKit
        run: cd $GITHUB_WORKSPACE/depends/i686-w64-mingw32/include/QtWebKit && ls -al
        
      - name: list made depends lib
        run: cd $GITHUB_WORKSPACE/depends/i686-w64-mingw32/lib && ls -al
        
      - name: list made depends lib pkgconfig
        run: cd $GITHUB_WORKSPACE/depends/i686-w64-mingw32/lib/pkgconfig && ls -al
        
      - name: list made depends bin
        run: cd $GITHUB_WORKSPACE/depends/i686-w64-mingw32/bin && ls -al
        
      - name: list made depends native
        run: cd $GITHUB_WORKSPACE/depends/i686-w64-mingw32/native && ls -al
        
      - name: list made depends native bin
        run: cd $GITHUB_WORKSPACE/depends/i686-w64-mingw32/native/bin && ls -al
        
      - name: Auto-generate configuration
        run: ./autogen.sh
        
      - name: configure
        run: CONFIG_SITE=$PWD/depends/i686-w64-mingw32/share/config.site ./configure --enable-gui --prefix=/
        
      - name: make
        run: make -j2

  windows64-ubuntu20:
    runs-on: ubuntu-20.04

    steps:
      - uses: actions/checkout@v4

      - name: Restore depends cache
        id: cache-depends
        uses: actions/cache/restore@v3
        with:
          path: |
            depends/built
            depends/sources
            depends/work
            depends/x86_64-w64-mingw32
          key: win64-depends-${{ runner.os }}-${{ hashFiles('depends/packages/*') }}
          restore-keys: |
            win64-depends-${{ runner.os }}-${{ hashFiles('depends/packages/*') }}-
            win64-depends-${{ runner.os }}-

      - name: Install base tools
        run: |
          sudo apt-get update
          sudo apt-get install -y build-essential libtool automake pkg-config bsdmainutils curl git

      - name: Set up MingW64 Cross Compile tools
        run: |
          sudo apt-get install -y g++-mingw-w64-x86-64
          sudo update-alternatives --set x86_64-w64-mingw32-g++ /usr/bin/x86_64-w64-mingw32-g++-posix
          
      - name: create native bin location
        if: steps.cache-depends.outputs.cache-hit != 'true'
        run: cd depends && mkdir x86_64-w64-mingw32 && cd x86_64-w64-mingw32 && mkdir native && cd native && mkdir bin

      - name: Install essential tools
        run: |
          sudo apt-get install -y \
          build-essential \
          xutils-dev \
          libicu-dev \
          dos2unix \
          ninja-build \
          libtool \
          gperf \
          autotools-dev \
          automake \
          pkg-config \
          bsdmainutils \
          libattr1-dev \
          make \
          bison \
          byacc \
          cmake \
          curl \
          ruby \
          flex \
          g++-multilib \
          libevent-dev \
          binutils-gold \
          python2 \
          coreutils \
          libleveldb-dev \
          libsqlite3-dev \
          libwebp-dev \
          libxml2-dev \
          libxslt1-dev \
          xserver-xorg-dev \
          xorg-dev \
          libpulse-dev \
          libfontconfig1-dev \
          libfreetype6-dev \
          libx11-dev \
          libx11-xcb-dev \
          libxext-dev \
          libxfixes-dev \
          libxi-dev \
          libxrender-dev \
          libxcb1-dev \
          libxcb-glx0-dev \
          libxcb-keysyms1-dev \
          libxcb-image0-dev \
          libxcb-shm0-dev \
          libxcb-icccm4-dev \
          libxcb-sync-dev \
          libxcb-xfixes0-dev \
          libxcb-shape0-dev \
          libxcb-randr0-dev \
          libxcb-render-util0-dev \
          libxcb-xinerama0-dev \
          libxkbcommon-dev \
          libxkbcommon-x11-dev \
          xserver-xorg-dev \
          xorg-dev \
          libxrender-dev \
          libxrandr-dev \
          libxt-dev \
          libxcb-xinerama0 \
          libxcb-xinerama0-dev

      - name: Set Python 2 as default
        run: |
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python3 1
          sudo update-alternatives --install /usr/bin/python python /usr/bin/python2 2
          sudo update-alternatives --set python /usr/bin/python2
          echo "$(dirname $(readlink -f $(which python)))" >> $GITHUB_PATH

      - name: Verify Python Version
        run: python --version

      - name: Install and update autoconf to 2.71
        run: |
          wget https://ftp.gnu.org/gnu/autoconf/autoconf-2.71.tar.gz
          tar -xzf autoconf-2.71.tar.gz
          cd autoconf-2.71
          # Install to a local directory to avoid system conflicts
          ./configure --prefix=$HOME/.local
          make
          make install
          # Add the local bin to PATH
          echo "$HOME/.local/bin" >> $GITHUB_PATH
          # Verify the version
          $HOME/.local/bin/autoconf --version



      - name: Fix sqlite3
        run: echo "PKG_CONFIG_PATH=/usr/lib/x86_64-linux-gnu/pkgconfig:\$PKG_CONFIG_PATH" >> $GITHUB_ENV
        
      - name: Add gperf native bin path to environment
        run: echo "$GITHUB_WORKSPACE/depends/x86_64-w64-mingw32/native/bin" >> $GITHUB_PATH
        
      - name: remove any previous versions of openssl
        run: sudo apt purge -y libssl-dev && sudo apt clean && sudo apt autoremove

      - name: Build dependencies in the depends folder
        run: |
          echo "PATH=$(echo "$PATH" | sed -e 's/:\/mnt.*//g')" >> $GITHUB_ENV
          cd depends/
          make HOST=x86_64-w64-mingw32

      - name: Save depends cache
        if: steps.cache-depends.outputs.cache-hit != 'true'
        uses: actions/cache/save@v3
        with:
          path: |
            depends/built
            depends/sources
            depends/work
            depends/x86_64-w64-mingw32
          key: win64-depends-${{ runner.os }}-${{ hashFiles('depends/packages/*') }}
          
      - name: get and untar bdb4.8
        run: wget http://download.oracle.com/berkeley-db/db-4.8.30.NC.tar.gz && tar -xzvf db-4.8.30.NC.tar.gz
        
      - name: fix atomic
        run: cd db-4.8.30.NC/build_unix/ && sed -i 's/__atomic_compare_exchange/__atomic_compare_exchange_db/g' ../dbinc/atomic.h 
        
      - name: build bdb4.8
        run: cd db-4.8.30.NC/build_unix/ && ../dist/configure --enable-cxx --disable-shared --with-pic  --prefix=$BDB_PREFIX
        
      - name: make and make install 
        run: cd db-4.8.30.NC/build_unix/ && sudo make install
          
      - name: list usr/bin
        run: cd /usr/bin && ls
        
      - name: list usr/local/bin
        run: cd /usr/local/bin && ls
        
      - name: list usr/local
        run: cd /usr/local/ && ls
          
      - name: list made depends
        run: cd $GITHUB_WORKSPACE/depends/x86_64-w64-mingw32/ && ls
        
      - name: list made depends share
        run: cd $GITHUB_WORKSPACE/depends/x86_64-w64-mingw32/share && ls
        
      - name: list made depends include
        run: cd $GITHUB_WORKSPACE/depends/x86_64-w64-mingw32/include && ls
        
      - name: list made depends include boost
        run: cd $GITHUB_WORKSPACE/depends/x86_64-w64-mingw32/include/boost && ls
        
      - name: list made depends lib
        run: cd $GITHUB_WORKSPACE/depends/x86_64-w64-mingw32/lib && ls
        
      - name: list made depends lib pkgconfig
        run: cd $GITHUB_WORKSPACE/depends/x86_64-w64-mingw32/lib/pkgconfig && ls
        
      - name: list made depends bin
        run: cd $GITHUB_WORKSPACE/depends/x86_64-w64-mingw32/bin && ls
        
      - name: list made depends native
        run: cd $GITHUB_WORKSPACE/depends/x86_64-w64-mingw32/native && ls
        
      - name: list made depends native bin
        run: cd $GITHUB_WORKSPACE/depends/x86_64-w64-mingw32/native/bin && ls
        
      - name: Add depends lib path to environment
        run: echo "$GITHUB_WORKSPACE/depends/x86_64-w64-mingw32/lib" >> $GITHUB_PATH

      - name: Auto-generate configuration
        run: ./autogen.sh
        
      - name: configure
        run: CONFIG_SITE=$PWD/depends/x86_64-w64-mingw32/share/config.site ./configure --enable-gui --prefix=
      
      - name: make
        run: make -j2
